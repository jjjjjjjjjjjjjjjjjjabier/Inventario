// <auto-generated />
using System;
using InventarioComputo.Infrastructure.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventarioComputo.Infrastructure.Migrations
{
    [DbContext(typeof(InventarioDbContext))]
    [Migration("20250917013651_CorrigeModeloDeDatos")]
    partial class CorrigeModeloDeDatos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedeId");

                    b.ToTable("Areas", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.EquipoComputo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("EtiquetaInventario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdquisicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEquipoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("NumeroSerie")
                        .IsUnique();

                    b.HasIndex("TipoEquipoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ZonaId");

                    b.ToTable("EquiposComputo", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Estados", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.HistorialMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipoComputoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioAnteriorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioNuevoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioResponsableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoComputoId");

                    b.HasIndex("UsuarioAnteriorId");

                    b.HasIndex("UsuarioNuevoId");

                    b.HasIndex("UsuarioResponsableId");

                    b.ToTable("HistorialMovimientos", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Consulta"
                        });
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Sedes", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.TipoEquipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposEquipo", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Unidades", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRoles", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Zonas", (string)null);
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Area", b =>
                {
                    b.HasOne("InventarioComputo.Domain.Entities.Sede", "Sede")
                        .WithMany("Areas")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.EquipoComputo", b =>
                {
                    b.HasOne("InventarioComputo.Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventarioComputo.Domain.Entities.TipoEquipo", "TipoEquipo")
                        .WithMany()
                        .HasForeignKey("TipoEquipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventarioComputo.Domain.Entities.Usuario", "Usuario")
                        .WithMany("EquiposAsignados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InventarioComputo.Domain.Entities.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Estado");

                    b.Navigation("TipoEquipo");

                    b.Navigation("Usuario");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.HistorialMovimiento", b =>
                {
                    b.HasOne("InventarioComputo.Domain.Entities.EquipoComputo", "EquipoComputo")
                        .WithMany("HistorialMovimientos")
                        .HasForeignKey("EquipoComputoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioComputo.Domain.Entities.Usuario", "UsuarioAnterior")
                        .WithMany()
                        .HasForeignKey("UsuarioAnteriorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InventarioComputo.Domain.Entities.Usuario", "UsuarioNuevo")
                        .WithMany()
                        .HasForeignKey("UsuarioNuevoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InventarioComputo.Domain.Entities.Usuario", "UsuarioResponsable")
                        .WithMany()
                        .HasForeignKey("UsuarioResponsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipoComputo");

                    b.Navigation("UsuarioAnterior");

                    b.Navigation("UsuarioNuevo");

                    b.Navigation("UsuarioResponsable");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("InventarioComputo.Domain.Entities.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioComputo.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Zona", b =>
                {
                    b.HasOne("InventarioComputo.Domain.Entities.Area", "Area")
                        .WithMany("Zonas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Area", b =>
                {
                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.EquipoComputo", b =>
                {
                    b.Navigation("HistorialMovimientos");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Sede", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("InventarioComputo.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("EquiposAsignados");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
